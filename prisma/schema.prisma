generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url       = env("MONGODB_PRISMA_URL") // uses connection pooling
  directUrl = env("MONGODB_URL_NON_POOLING") // uses a direct connection
}

//
// Storage of Linked Data
//
model LinkStorage {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  ownerId    String
  visibility LinkStorageVisibility

  dataType  LinkStorageDataType
  dataTitle String?
  dataSize  Int
  data      Json

  upVotes    Int @default(0)
  downVotes  Int @default(0)
  flagsCount Int @default(0)
  readCount  Int @default(0)
  writeCount Int @default(1)

  // time-based expiration
  expiresAt DateTime?

  // manual deletion
  deletionKey String
  isDeleted   Boolean   @default(false)
  deletedAt   DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum LinkStorageVisibility {
  PUBLIC
  UNLISTED
  PRIVATE
}

enum LinkStorageDataType {
  CHAT_V1
}

type QuestionairesMessages {
  /// Could not determine type: the field only had null or empty values in the sample set.
  avatar     Json?
  choices    String[]
  created    BigInt
  id         String
  isRated    Boolean
  originLLM  String?
  purposeId  String?
  role       String
  selected   String?
  sender     String
  text       String
  tokenCount Int
  typing     Boolean
  updated    BigInt?
}

model Questionaires {
  id              String                  @id @default(auto()) @map("_id") @db.ObjectId
  autoTitle       String
  conversationId  String
  created         BigInt
  messages        QuestionairesMessages[]
  systemPurposeId String
  updated         BigInt
}
